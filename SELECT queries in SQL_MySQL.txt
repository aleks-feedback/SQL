SHOW databeses;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| students           |
| sys                |
+--------------------+
USE students;

SELECT * FROM courses;
+---------+--------+----+
| faculty | number | id |
+---------+--------+----+
| bio     |      1 |  1 |
| chem    |      2 |  2 |
| math    |      3 |  3 |
| gum     |      4 |  4 |
| teo     |      1 |  5 |
+---------+--------+----+


SELECT DISTINCT number FROM courses;                          - Если мы не хотим чтобы нам показывались дублирующие поля
+--------+
| number | 
+--------+
|      1 |  
|      2 |  
|      3 |  
|      4 |   
+--------+

SELECT * FROM courses LIMIT 2;                                - Например мы хотим вывести только первые две строки из таблицы
+---------+--------+----+
| faculty | number | id |
+---------+--------+----+
| bio     |      1 |  1 |
| chem    |      2 |  2 |
+---------+--------+----+

SELECT number AS номер FROM courses;                          - Присвоение временного имени полю
+----------+
|номер     | 
+----------+
|        1 |  
|        2 |  
|        3 |  
|        4 |
|        1 |   
+----------+


SELECT * FROM courses WHERE faculty="bio";                    - Если мы хотим вывести какое-то поле из таблицы и должны
                                                              присвоить условие по которому будем искать значение
 
+---------+--------+
| faculty | number | 
+---------+--------+
| bio     |      1 |  
+---------+--------+

SELECT number FROM courses WHERE number > 1;
+--------+
| number | 
+--------+ 
|      2 |  
|      3 |  
|      4 |   
+--------+


SELECT * FROM courses WHERE number = 1 AND faculty ="bio";   - AND(когда будут соблюдаться оба условия)
+---------+--------+----+
| faculty | number | id |
+---------+--------+----+
| bio     |      1 |  1 |
+---------+--------+----+

SELECT * FROM courses WHERE number = 1 AND faculty ="gum";   - OR (соблюдаетсялибо одно уловие, либо другое)
+---------+--------+----+
| faculty | number | id |
+---------+--------+----+
| bio     |      1 |  1 |
| gum     |      4 |  4 |
| teo     |      1 |  5 |
+---------+--------+----+


SELECT faculty FROM courses WHERE faculty LIKE "%o";         - Поиск похожих значений, например мы хотим
+---------+                                                   найти слова на конце которых стоит буква "о"
| faculty | 
+---------+
| bio     |       
| teo     |      
+---------+           
                                                  
SELECT faculty FROM courses WHERE faculty LIKE "_io";        - Ищем значения заканчивающиеся на "io"
+---------+                                                  
| faculty | 
+---------+
| bio     |       
| teo     |      
+---------+  

SELECT faculty FROM courses WHERE faculty LIKE "_e%";         - Ищем значение с буквой "e" в середине 
+---------+                                                  
| faculty | 
+---------+   
| teo     |      
+---------+  

SELECT * FROM courses WHERE number BETWEEN 2 AND 4;           - Ищем диапазон значений number от 2 до 4
+---------+--------+----+
| faculty | number | id |
+---------+--------+----+
| chem    |      2 |  2 |
| math    |      3 |  3 |
| gum     |      4 |  4 |
+---------+--------+----+

SELECT * FROM courses WHERE NOT number BETWEEN 2 AND 4;       - Ищем диапазон значений number который не входит в диапазон от 2 до 4
+---------+--------+----+ 
| faculty | number | id |
+---------+--------+----+
| bio     |      1 |  1 |
| teo     |      1 |  5 |
+---------+--------+----+


SELECT * FROM courses WHERE number IN (1,4);                 - интересует не диапазон, а попадание в какие-то конкретные числа
+---------+--------+----+
| faculty | number | id |
+---------+--------+----+
| bio     |      1 |  1 |
| gum     |      4 |  4 |
| teo     |      1 |  5 |
+---------+--------+----+

SELECT * FROM courses WHERE (faculty = "teo" OR faculty ="bio") AND number = 1;    - объединим логические функции когда, какая-то пара значений не важна, а какая-то обязательна
+---------+--------+----+ 
| faculty | number | id |
+---------+--------+----+
| bio     |      1 |  1 |
| teo     |      1 |  5 |
+---------+--------+----+

SELECT * FROM courses ORDER BY faculty;                      - сортировка значений в таблице в алфавитном порядке
+---------+--------+----+
| faculty | number | id |
+---------+--------+----+
| bio     |      1 |  1 |
| chem    |      2 |  2 |
| gum     |      4 |  4 |
| math    |      3 |  3 |
| teo     |      1 |  5 |
+---------+--------+----+

SELECT * FROM courses ORDER BY faculty DESC;                 - Сортировка в обратном порядке
+---------+--------+----+
| faculty | number | id |
+---------+--------+----+
| teo     |      1 |  5 |
| math    |      3 |  3 |
| gum     |      4 |  4 |
| chem    |      2 |  2 |
| bio     |      1 |  1 |
+---------+--------+----+

SELECT AVG(number) FROM courses;                            - Среднее значение по полю number
+-------------+                                                  
| AVG(number) | 
+-------------+   
|      2.2000 |      
+-------------+  

SELECT SUM(number) FROM courses;                            - Сумма значений в поле number
+-------------+                                                  
| SUM(number) | 
+-------------+   
|          11 |      
+-------------+  

SELECT MIN(number) AS  min_number FROM courses;             - Выведем минимальное значение поля number и присвоим полю псевдоним
+-------------+                                                  
|  min_number | 
+-------------+   
|           1 |      
+-------------+

SELECT COUNT(faculty) FROM courses;                         - Выведем количество записей которые заполнены значениями
+------------- --+                                                  
| COUNT(faculty) | 
+----------- ----+   
|             5  |      
+----------------+ 